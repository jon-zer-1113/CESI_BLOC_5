1713298321
waR3U4bTeM%3Acd129035d05d9b1d3ce469dcad2633fd-c07ef79ad3b41666ace6e02d3aaff1d5
s:5788:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NTU6IkNyZWF0ZSBhIHByb2plY3QgbWFwIChzaW1pbGFyIHRvIGEgc2l0ZW1hcCkgb2YgcHJvamVjdC4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NzE1OiJUaGUgUmVmbGVjdGlvbiBjb21wb25lbnQgaXMgY2FwYWJsZSBvZiBhbmFseXppbmcgb25lIG9yIG1vcmUgZmlsZXMgaW50byBhIGhpZXJhcmNoeSBvZiBvYmplY3RzIHJlcHJlc2VudGluZyB0aGUKc3RydWN0dXJlIG9mIHlvdXIgcHJvamVjdC4gSXQgZG9lcyB0aGlzIGJ5IGFuYWx5emluZyB0aGUgc291cmNlIGNvZGUgb2YgZWFjaCBpbmRpdmlkdWFsIGZpbGUgdXNpbmcgdGhlCmBhbmFseXplKClgIG1ldGhvZCBpbiB0aGUgQW5hbHl6ZXIgY2xhc3MuCgpCZWNhdXNlIHRoZSBBbmFseXplciBjbGFzcyByZXF1aXJlcyBhIHdob2xlIHNlcmllcyBvZiBvYmplY3RzIHRoYXQgaW50ZXJhY3QgdG9nZXRoZXIgYSBmYWN0b3J5IG1ldGhvZCBgY3JlYXRlKClgCmlzIGF2YWlsYWJsZS4gVGhpcyBtZXRob2QgaW5zdGFudGlhdGVzIGFsbCBvYmplY3RzIGFuZCBwcm92aWRlcyBhIHJlYXNvbmFibGUgZGVmYXVsdCB0byBzdGFydCB1c2luZyB0aGUgQW5hbHl6ZXIuCgpUaGVyZSBpcyBhbHNvIGEgU2VydmljZSBQcm92aWRlciAoYFxwaHBEb2N1bWVudG9yXERlc2NyaXB0b3JcU2VydmljZVByb3ZpZGVyYCkgdGhhdCBjYW4gYmUgdXNlZCB3aXRoIGVpdGhlciBTaWxleApvciBDaWxleCBpbnN0ZWFkIG9mIHVzaW5nIHRoZSBmYWN0b3J5IG1ldGhvZDsgdGhpcyB3aWxsIG1ha2UgaXQgZWFzaWVyIHRvIHBsdWcgaW4geW91ciBvd24gZmVhdHVyZXMgaWYgeW91IHdhbnQgdG8uIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJjMDdlZjc5YWQzYjQxNjY2YWNlNmUwMmQzYWFmZjFkNSI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjExOiJleGFtcGxlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQzOiJ2ZW5kb3IvcGhwZG9jdW1lbnRvci9yZWZsZWN0aW9uL2V4YW1wbGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxODMzOiI8P3BocAovKioKICAgICAqIENyZWF0ZSBhIHByb2plY3QgbWFwIChzaW1pbGFyIHRvIGEgc2l0ZW1hcCkgb2YgcHJvamVjdC4KICAgICAqCiAgICAgKiBUaGUgUmVmbGVjdGlvbiBjb21wb25lbnQgaXMgY2FwYWJsZSBvZiBhbmFseXppbmcgb25lIG9yIG1vcmUgZmlsZXMgaW50byBhIGhpZXJhcmNoeSBvZiBvYmplY3RzIHJlcHJlc2VudGluZyB0aGUKICAgICAqIHN0cnVjdHVyZSBvZiB5b3VyIHByb2plY3QuIEl0IGRvZXMgdGhpcyBieSBhbmFseXppbmcgdGhlIHNvdXJjZSBjb2RlIG9mIGVhY2ggaW5kaXZpZHVhbCBmaWxlIHVzaW5nIHRoZQogICAgICogYGFuYWx5emUoKWAgbWV0aG9kIGluIHRoZSBBbmFseXplciBjbGFzcy4KICAgICAqCiAgICAgKiBCZWNhdXNlIHRoZSBBbmFseXplciBjbGFzcyByZXF1aXJlcyBhIHdob2xlIHNlcmllcyBvZiBvYmplY3RzIHRoYXQgaW50ZXJhY3QgdG9nZXRoZXIgYSBmYWN0b3J5IG1ldGhvZCBgY3JlYXRlKClgCiAgICAgKiBpcyBhdmFpbGFibGUuIFRoaXMgbWV0aG9kIGluc3RhbnRpYXRlcyBhbGwgb2JqZWN0cyBhbmQgcHJvdmlkZXMgYSByZWFzb25hYmxlIGRlZmF1bHQgdG8gc3RhcnQgdXNpbmcgdGhlIEFuYWx5emVyLgogICAgICoKICAgICAqIFRoZXJlIGlzIGFsc28gYSBTZXJ2aWNlIFByb3ZpZGVyIChgXHBocERvY3VtZW50b3JcRGVzY3JpcHRvclxTZXJ2aWNlUHJvdmlkZXJgKSB0aGF0IGNhbiBiZSB1c2VkIHdpdGggZWl0aGVyIFNpbGV4CiAgICAgKiBvciBDaWxleCBpbnN0ZWFkIG9mIHVzaW5nIHRoZSBmYWN0b3J5IG1ldGhvZDsgdGhpcyB3aWxsIG1ha2UgaXQgZWFzaWVyIHRvIHBsdWcgaW4geW91ciBvd24gZmVhdHVyZXMgaWYgeW91IHdhbnQgdG8uCiAgICAgKi8KCi8vIHVzZSBDb21wb3NlcidzIGF1dG9sb2FkZXIgdG8gYWxsb3cgdGhlIGFwcGxpY2F0aW9uIHRvIGF1dG9tYXRpY2FsbHkgbG9hZCBhbGwgY2xhc3NlcyBvbiByZXF1ZXN0Lgp1c2UgcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9qZWN0OwoKaW5jbHVkZSAndmVuZG9yL2F1dG9sb2FkLnBocCc7CgovLyBDcmVhdGUgYSBuZXcgQW5hbHl6ZXIgd2l0aCB3aGljaCB3ZSBjYW4gYW5hbHl6ZSBhIFBIUCBzb3VyY2UgZmlsZQokcHJvamVjdEZhY3RvcnkgPSBccGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9qZWN0RmFjdG9yeTo6Y3JlYXRlSW5zdGFuY2UoKTsKCi8vIENyZWF0ZSBhbiBhcnJheSBvZiBmaWxlcyB0byBhbmFsaXplLgokZmlsZXMgPSBbIG5ldyBccGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZpbGVcTG9jYWxGaWxlKCd0ZXN0cy9leGFtcGxlLmZpbGUucGhwJykgXTsKCi8vY3JlYXRlIGEgbmV3IHByb2plY3QgJ015UHJvamVjdCcgY29udGFpbmluZyBhbGwgZWxlbWVudHMgaW4gdGhlIGZpbGVzLgovKiogQHZhciBQcm9qZWN0ICRwcm9qZWN0ICovCiRwcm9qZWN0ID0gJHByb2plY3RGYWN0b3J5LT5jcmVhdGUoJ015UHJvamVjdCcsICRmaWxlcyk7CgovLyBBcyBhbiBleGFtcGxlIG9mIHdoYXQgeW91IGNhbiBkbywgbGV0J3MgbGlzdCBhbGwgY2xhc3MgbmFtZXMgaW4gdGhlIGZpbGUgJ3Rlc3RzL2V4YW1wbGUuZmlsZS5waHAnLgplY2hvICdMaXN0IGFsbCBjbGFzc2VzIGluIHRoZSBleGFtcGxlIHNvdXJjZSBmaWxlOiAnIC4gUEhQX0VPTDsKCi8qKiBAdmFyIFxwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyAkY2xhc3MgKi8KZm9yZWFjaCAoJHByb2plY3QtPmdldEZpbGVzKClbJ3Rlc3RzL2V4YW1wbGUuZmlsZS5waHAnXS0+Z2V0Q2xhc3NlcygpIGFzICRjbGFzcykgewogICAgZWNobyAnLSAnIC4gJGNsYXNzLT5nZXRGcXNlbigpIC4gUEhQX0VPTDsKfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";